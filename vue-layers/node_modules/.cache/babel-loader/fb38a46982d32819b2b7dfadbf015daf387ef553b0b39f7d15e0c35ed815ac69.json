{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Map, View } from 'ol';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport { OSM, Vector as VectorSource } from 'ol/source';\nimport Overlay from 'ol/Overlay';\nimport { Circle as Fill, Stroke, Style } from 'ol/style';\nimport { toLonLat } from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Ellipse from 'ol/geom';\nexport default {\n  name: 'CustomMap',\n  data() {\n    return {\n      map: null,\n      marker: null,\n      overlay: null,\n      coordinates: '',\n      circleFeature: null,\n      circleRadius: 0\n    };\n  },\n  mounted() {\n    this.map = new Map({\n      target: 'map',\n      layers: [new TileLayer({\n        source: new OSM()\n      })],\n      view: new View({\n        center: [0, 0],\n        zoom: 2\n      })\n    });\n\n    // Добавляем обработчик события клика на карту\n    this.map.on('click', this.handleMapClick);\n\n    // Создаем всплывающее окно для метки\n    this.overlay = new Overlay({\n      element: document.createElement('div'),\n      positioning: 'bottom-center',\n      stopEvent: false\n    });\n    this.map.addOverlay(this.overlay);\n  },\n  methods: {\n    handleMapClick(event) {\n      // Получаем координаты места клика\n      const coords = event.coordinate;\n\n      // Преобразуем координаты в долготу и широту с 4 знаками после запятой\n      const lonLat = toLonLat(coords).map(coord => coord.toFixed(4));\n      const lon = lonLat[0];\n      const lat = lonLat[1];\n\n      // Обновляем текстовое поле с координатами\n      this.coordinates = `Долгота: ${lon}, Широта: ${lat}`;\n\n      // Удаляем старую метку, если она была\n      if (this.marker) {\n        this.map.removeOverlay(this.marker);\n      }\n\n      // Создаем новую метку\n      const markerElement = document.createElement('div');\n      markerElement.className = 'marker';\n      markerElement.style.backgroundColor = 'black'; // Цвет метки\n      markerElement.style.width = '5px'; // Ширина метки\n      markerElement.style.height = '5px'; // Высота метки\n      markerElement.style.borderRadius = '50%'; // Круглая метка\n\n      this.marker = new Overlay({\n        element: markerElement,\n        position: coords,\n        positioning: 'center-center',\n        stopEvent: false\n      });\n      this.map.addOverlay(this.marker);\n\n      // Создаем эллипс вокруг метки\n      const ellipseFeature = this.addEllipseFeature(coords, 10000, 10000);\n\n      // Позиционируем всплывающее окно с координатами над меткой\n      this.overlay.setPosition(coords);\n      const element = this.overlay.getElement();\n      element.innerHTML = this.coordinates;\n    },\n    addEllipseFeature(center, semiMajor, semiMinor) {\n      let coordinates = [];\n      const radinas = Math.PI / 180;\n      for (let angle = 1; angle <= 360; angle++) {\n        const px = center[0] + semiMajor * Math.cos(radinas * angle);\n        const py = center[0] + semiMinor * Math.sin(radinas * angle);\n        coordinates.push([px, py]);\n      }\n      const geoJson = {\n        'type': 'Feature',\n        'geometry': {\n          'type': 'Polygon',\n          'coordinates': []\n        }\n      };\n      const featureId = source.getFeatures().length;\n      coordinates = this.convertCoordinates('Polygon', [coordinates]);\n      geoJson.geometry.coordinates = coordinates;\n      const polygonFeature = new GeoJSON().readFeature(geoJson);\n      polygonFeature.setId(featureId);\n      const layerStyle = [new Style({\n        stroke: new Stroke({\n          color: 'blue',\n          width: 3\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 0, 255, 0.1)'\n        })\n      })];\n      polygonFeature.setStyle(layerStyle);\n      source.addFeature(polygonFeature);\n      return featureId;\n    }\n  }\n};","map":{"version":3,"names":["Map","View","Tile","TileLayer","Vector","VectorLayer","OSM","VectorSource","Overlay","Circle","Fill","Stroke","Style","toLonLat","Feature","Ellipse","name","data","map","marker","overlay","coordinates","circleFeature","circleRadius","mounted","target","layers","source","view","center","zoom","on","handleMapClick","element","document","createElement","positioning","stopEvent","addOverlay","methods","event","coords","coordinate","lonLat","coord","toFixed","lon","lat","removeOverlay","markerElement","className","style","backgroundColor","width","height","borderRadius","position","ellipseFeature","addEllipseFeature","setPosition","getElement","innerHTML","semiMajor","semiMinor","radinas","Math","PI","angle","px","cos","py","sin","push","geoJson","featureId","getFeatures","length","convertCoordinates","geometry","polygonFeature","GeoJSON","readFeature","setId","layerStyle","stroke","color","fill","setStyle","addFeature"],"sources":["C:\\Users\\aefa1\\Desktop\\VUE JS\\vue-layers\\src\\components\\Map.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { Map, View } from 'ol';\r\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\r\nimport { OSM, Vector as VectorSource } from 'ol/source';\r\nimport Overlay from 'ol/Overlay';\r\nimport { Circle as Fill,Stroke, Style } from 'ol/style';\r\nimport { toLonLat } from 'ol/proj';\r\nimport Feature from 'ol/Feature';\r\nimport Ellipse from 'ol/geom';\r\n\r\nexport default {\r\n  name: 'CustomMap',\r\n  data() {\r\n    return {\r\n      map: null,\r\n      marker: null,\r\n      overlay: null,\r\n      coordinates: '',\r\n      circleFeature: null,\r\n      circleRadius: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.map = new Map({\r\n      target: 'map',\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM(),\r\n        }),\r\n      ],\r\n      view: new View({\r\n        center: [0, 0],\r\n        zoom: 2,\r\n      }),\r\n    });\r\n\r\n    // Добавляем обработчик события клика на карту\r\n    this.map.on('click', this.handleMapClick);\r\n\r\n    // Создаем всплывающее окно для метки\r\n    this.overlay = new Overlay({\r\n      element: document.createElement('div'),\r\n      positioning: 'bottom-center',\r\n      stopEvent: false,\r\n    });\r\n    this.map.addOverlay(this.overlay);\r\n  },\r\n  methods: {\r\n    handleMapClick(event) {\r\n      // Получаем координаты места клика\r\n      const coords = event.coordinate;\r\n\r\n      // Преобразуем координаты в долготу и широту с 4 знаками после запятой\r\n      const lonLat = toLonLat(coords).map(coord => coord.toFixed(4));\r\n      const lon = lonLat[0];\r\n      const lat = lonLat[1];\r\n\r\n      // Обновляем текстовое поле с координатами\r\n      this.coordinates = `Долгота: ${lon}, Широта: ${lat}`;\r\n\r\n      // Удаляем старую метку, если она была\r\n      if (this.marker) {\r\n        this.map.removeOverlay(this.marker);\r\n      }\r\n\r\n      // Создаем новую метку\r\n      const markerElement = document.createElement('div');\r\n      markerElement.className = 'marker';\r\n      markerElement.style.backgroundColor = 'black'; // Цвет метки\r\n      markerElement.style.width = '5px'; // Ширина метки\r\n      markerElement.style.height = '5px'; // Высота метки\r\n      markerElement.style.borderRadius = '50%'; // Круглая метка\r\n\r\n      this.marker = new Overlay({\r\n        element: markerElement,\r\n        position: coords,\r\n        positioning: 'center-center',\r\n        stopEvent: false,\r\n      });\r\n      this.map.addOverlay(this.marker);\r\n\r\n      // Создаем эллипс вокруг метки\r\n      const ellipseFeature = this.addEllipseFeature(coords, 10000, 10000);\r\n\r\n      // Позиционируем всплывающее окно с координатами над меткой\r\n      this.overlay.setPosition(coords);\r\n      const element = this.overlay.getElement();\r\n      element.innerHTML = this.coordinates;\r\n    },\r\n\r\n    addEllipseFeature(center, semiMajor, semiMinor) {\r\n      let coordinates = [];\r\n      const radinas = Math.PI / 180;\r\n      for (let angle = 1; angle <= 360; angle++) {\r\n        const px = center[0] + semiMajor * Math.cos(radinas * angle);\r\n        const py = center[0] + semiMinor * Math.sin(radinas * angle);\r\n        coordinates.push([px, py]);\r\n      }\r\n      const geoJson = {\r\n        'type': 'Feature',\r\n        'geometry': {\r\n          'type': 'Polygon',\r\n          'coordinates': []\r\n        }\r\n      };\r\n      const featureId = source.getFeatures().length;\r\n      coordinates = this.convertCoordinates('Polygon', [coordinates]);\r\n      geoJson.geometry.coordinates = coordinates;\r\n      const polygonFeature = (new GeoJSON()).readFeature(geoJson);\r\n      polygonFeature.setId(featureId);\r\n      const layerStyle = [  new Style({\r\n        stroke: new Stroke({\r\n          color: 'blue',\r\n          width: 3\r\n        }),\r\n        fill: new Fill({\r\n          color: 'rgba(0, 0, 255, 0.1)'\r\n        })\r\n      })];\r\n      polygonFeature.setStyle(layerStyle);\r\n      source.addFeature(polygonFeature);\r\n      return featureId;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.marker {\r\n  position: relative;\r\n}\r\n</style>\r\n"],"mappings":";AAKA,SAASA,GAAG,EAAEC,IAAG,QAAS,IAAI;AAC9B,SAASC,IAAG,IAAKC,SAAS,EAAEC,MAAK,IAAKC,WAAU,QAAS,UAAU;AACnE,SAASC,GAAG,EAAEF,MAAK,IAAKG,YAAW,QAAS,WAAW;AACvD,OAAOC,OAAM,MAAO,YAAY;AAChC,SAASC,MAAK,IAAKC,IAAI,EAACC,MAAM,EAAEC,KAAI,QAAS,UAAU;AACvD,SAASC,QAAO,QAAS,SAAS;AAClC,OAAOC,OAAM,MAAO,YAAY;AAChC,OAAOC,OAAM,MAAO,SAAS;AAE7B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,IAAI;MACTC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,IAAI;MACnBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,GAAE,GAAI,IAAIlB,GAAG,CAAC;MACjByB,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE,CACN,IAAIvB,SAAS,CAAC;QACZwB,MAAM,EAAE,IAAIrB,GAAG,CAAC;MAClB,CAAC,CAAC,CACH;MACDsB,IAAI,EAAE,IAAI3B,IAAI,CAAC;QACb4B,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,IAAI,EAAE;MACR,CAAC;IACH,CAAC,CAAC;;IAEF;IACA,IAAI,CAACZ,GAAG,CAACa,EAAE,CAAC,OAAO,EAAE,IAAI,CAACC,cAAc,CAAC;;IAEzC;IACA,IAAI,CAACZ,OAAM,GAAI,IAAIZ,OAAO,CAAC;MACzByB,OAAO,EAAEC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtCC,WAAW,EAAE,eAAe;MAC5BC,SAAS,EAAE;IACb,CAAC,CAAC;IACF,IAAI,CAACnB,GAAG,CAACoB,UAAU,CAAC,IAAI,CAAClB,OAAO,CAAC;EACnC,CAAC;EACDmB,OAAO,EAAE;IACPP,cAAcA,CAACQ,KAAK,EAAE;MACpB;MACA,MAAMC,MAAK,GAAID,KAAK,CAACE,UAAU;;MAE/B;MACA,MAAMC,MAAK,GAAI9B,QAAQ,CAAC4B,MAAM,CAAC,CAACvB,GAAG,CAAC0B,KAAI,IAAKA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MAC9D,MAAMC,GAAE,GAAIH,MAAM,CAAC,CAAC,CAAC;MACrB,MAAMI,GAAE,GAAIJ,MAAM,CAAC,CAAC,CAAC;;MAErB;MACA,IAAI,CAACtB,WAAU,GAAK,YAAWyB,GAAI,aAAYC,GAAI,EAAC;;MAEpD;MACA,IAAI,IAAI,CAAC5B,MAAM,EAAE;QACf,IAAI,CAACD,GAAG,CAAC8B,aAAa,CAAC,IAAI,CAAC7B,MAAM,CAAC;MACrC;;MAEA;MACA,MAAM8B,aAAY,GAAIf,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACnDc,aAAa,CAACC,SAAQ,GAAI,QAAQ;MAClCD,aAAa,CAACE,KAAK,CAACC,eAAc,GAAI,OAAO,EAAE;MAC/CH,aAAa,CAACE,KAAK,CAACE,KAAI,GAAI,KAAK,EAAE;MACnCJ,aAAa,CAACE,KAAK,CAACG,MAAK,GAAI,KAAK,EAAE;MACpCL,aAAa,CAACE,KAAK,CAACI,YAAW,GAAI,KAAK,EAAE;;MAE1C,IAAI,CAACpC,MAAK,GAAI,IAAIX,OAAO,CAAC;QACxByB,OAAO,EAAEgB,aAAa;QACtBO,QAAQ,EAAEf,MAAM;QAChBL,WAAW,EAAE,eAAe;QAC5BC,SAAS,EAAE;MACb,CAAC,CAAC;MACF,IAAI,CAACnB,GAAG,CAACoB,UAAU,CAAC,IAAI,CAACnB,MAAM,CAAC;;MAEhC;MACA,MAAMsC,cAAa,GAAI,IAAI,CAACC,iBAAiB,CAACjB,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;;MAEnE;MACA,IAAI,CAACrB,OAAO,CAACuC,WAAW,CAAClB,MAAM,CAAC;MAChC,MAAMR,OAAM,GAAI,IAAI,CAACb,OAAO,CAACwC,UAAU,CAAC,CAAC;MACzC3B,OAAO,CAAC4B,SAAQ,GAAI,IAAI,CAACxC,WAAW;IACtC,CAAC;IAEDqC,iBAAiBA,CAAC7B,MAAM,EAAEiC,SAAS,EAAEC,SAAS,EAAE;MAC9C,IAAI1C,WAAU,GAAI,EAAE;MACpB,MAAM2C,OAAM,GAAIC,IAAI,CAACC,EAAC,GAAI,GAAG;MAC7B,KAAK,IAAIC,KAAI,GAAI,CAAC,EAAEA,KAAI,IAAK,GAAG,EAAEA,KAAK,EAAE,EAAE;QACzC,MAAMC,EAAC,GAAIvC,MAAM,CAAC,CAAC,IAAIiC,SAAQ,GAAIG,IAAI,CAACI,GAAG,CAACL,OAAM,GAAIG,KAAK,CAAC;QAC5D,MAAMG,EAAC,GAAIzC,MAAM,CAAC,CAAC,IAAIkC,SAAQ,GAAIE,IAAI,CAACM,GAAG,CAACP,OAAM,GAAIG,KAAK,CAAC;QAC5D9C,WAAW,CAACmD,IAAI,CAAC,CAACJ,EAAE,EAAEE,EAAE,CAAC,CAAC;MAC5B;MACA,MAAMG,OAAM,GAAI;QACd,MAAM,EAAE,SAAS;QACjB,UAAU,EAAE;UACV,MAAM,EAAE,SAAS;UACjB,aAAa,EAAE;QACjB;MACF,CAAC;MACD,MAAMC,SAAQ,GAAI/C,MAAM,CAACgD,WAAW,CAAC,CAAC,CAACC,MAAM;MAC7CvD,WAAU,GAAI,IAAI,CAACwD,kBAAkB,CAAC,SAAS,EAAE,CAACxD,WAAW,CAAC,CAAC;MAC/DoD,OAAO,CAACK,QAAQ,CAACzD,WAAU,GAAIA,WAAW;MAC1C,MAAM0D,cAAa,GAAK,IAAIC,OAAO,CAAC,CAAC,CAAEC,WAAW,CAACR,OAAO,CAAC;MAC3DM,cAAc,CAACG,KAAK,CAACR,SAAS,CAAC;MAC/B,MAAMS,UAAS,GAAI,CAAG,IAAIvE,KAAK,CAAC;QAC9BwE,MAAM,EAAE,IAAIzE,MAAM,CAAC;UACjB0E,KAAK,EAAE,MAAM;UACbhC,KAAK,EAAE;QACT,CAAC,CAAC;QACFiC,IAAI,EAAE,IAAI5E,IAAI,CAAC;UACb2E,KAAK,EAAE;QACT,CAAC;MACH,CAAC,CAAC,CAAC;MACHN,cAAc,CAACQ,QAAQ,CAACJ,UAAU,CAAC;MACnCxD,MAAM,CAAC6D,UAAU,CAACT,cAAc,CAAC;MACjC,OAAOL,SAAS;IAClB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}