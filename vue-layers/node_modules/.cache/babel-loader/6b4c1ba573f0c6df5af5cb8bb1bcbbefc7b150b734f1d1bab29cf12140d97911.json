{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"controls\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Map = _resolveComponent(\"Map\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Map), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Контейнер для элементов управления \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchText = $event),\n    placeholder: \"Введите текст...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.searchText]]), _createCommentVNode(\" Текстовое поле \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.toggleList && _ctx.toggleList(...args))\n  }, \"Выбрать элементы\"), _createCommentVNode(\" Кнопка \"), _ctx.showList ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [_createCommentVNode(\" Список элементов (появляется по нажатию на кнопку) \"), _createCommentVNode(\" Здесь должны быть элементы списка \")])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_Fragment","_createVNode","_component_Map","_createElementVNode","_hoisted_1","_createCommentVNode","type","_cache","$event","_ctx","searchText","placeholder","onClick","args","toggleList","showList","_hoisted_2"],"sources":["C:\\Users\\aefa1\\Desktop\\VUE JS\\vue-layers\\src\\App.vue"],"sourcesContent":["<template>\n  <Map></Map>\n  <div class=\"controls\"> <!-- Контейнер для элементов управления -->\n      <input type=\"text\" v-model=\"searchText\" placeholder=\"Введите текст...\"> <!-- Текстовое поле -->\n      <button @click=\"toggleList\">Выбрать элементы</button> <!-- Кнопка -->\n      <ul v-if=\"showList\"> <!-- Список элементов (появляется по нажатию на кнопку) -->\n        <!-- Здесь должны быть элементы списка -->\n      </ul>\n    </div>\n</template>\n \n<script>\nimport Map from './components/Map.vue'\n \nexport default {\n  name: 'App',\n  components: {\n    Map\n  }\n}\n</script>\n \n<style>\n@import url('../node_modules/ol/ol.css');\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n \nhtml, body, #map, #app {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n</style>"],"mappings":";;EAEOA,KAAK,EAAC;AAAU;;EAFvBC,GAAA;AAAA;;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAWC,cAAA,GACXC,mBAAA,CAMQ,OANRC,UAMQ,GANeC,mBAAA,wCAA2C,E,gBAC9DF,mBAAA,CAAuE;IAAhEG,IAAI,EAAC,MAAM;IAHxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGkCC,IAAA,CAAAC,UAAU,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAxBF,IAAA,CAAAC,UAAU,E,GAAkCL,mBAAA,oBAAuB,EAC/FF,mBAAA,CAAqD;IAA5CS,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEJ,IAAA,CAAAK,UAAA,IAAAL,IAAA,CAAAK,UAAA,IAAAD,IAAA,CAAU;KAAE,kBAAgB,GAAUR,mBAAA,YAAe,EAC3DI,IAAA,CAAAM,QAAQ,I,cAAlBhB,mBAAA,CAEK,MAPXiB,UAAA,GAK2BX,mBAAA,wDAA2D,EAC9EA,mBAAA,uCAA0C,C,KANlDA,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}