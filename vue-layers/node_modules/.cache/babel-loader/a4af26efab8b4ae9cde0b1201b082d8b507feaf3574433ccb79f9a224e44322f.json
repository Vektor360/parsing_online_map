{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"controls\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Map = _resolveComponent(\"Map\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Map, {\n    ellipseRadius: $data.sliderValue\n  }, null, 8 /* PROPS */, [\"ellipseRadius\"]), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Контейнер для элементов управления \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchText = $event),\n    placeholder: \"Введите Координаты...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchText]]), _createCommentVNode(\" Текстовое поле \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleList && $options.toggleList(...args))\n  }, \"Выбрать элементы\"), _createCommentVNode(\" Кнопка \"), $data.showList ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [_createCommentVNode(\" Список элементов (появляется по нажатию на кнопку) \"), _createCommentVNode(\" Здесь должны быть элементы списка \")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"range\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.sliderValue = $event),\n    min: \"1\",\n    max: \"50000\",\n    onInput: _cache[3] || (_cache[3] = (...args) => $options.updateTextbox && $options.updateTextbox(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.sliderValue, void 0, {\n    number: true\n  }]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.searchText2 = $event),\n    onInput: _cache[5] || (_cache[5] = (...args) => $options.validateInput && $options.validateInput(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.searchText2, void 0, {\n    number: true\n  }]])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_Fragment","_createVNode","_component_Map","ellipseRadius","$data","sliderValue","_createElementVNode","_hoisted_1","_createCommentVNode","type","_cache","$event","searchText","placeholder","onClick","args","$options","toggleList","showList","_hoisted_2","min","max","onInput","updateTextbox","number","searchText2","validateInput"],"sources":["C:\\Users\\aefa1\\Desktop\\VUE JS\\vue-layers\\src\\App.vue"],"sourcesContent":["<template>\n  <Map :ellipseRadius=\"sliderValue\"></Map>\n\n  <div class=\"controls\"> <!-- Контейнер для элементов управления -->\n      <input type=\"text\" v-model=\"searchText\" placeholder=\"Введите Координаты...\"> <!-- Текстовое поле -->\n      <button @click=\"toggleList\">Выбрать элементы</button> <!-- Кнопка -->\n      <ul v-if=\"showList\"> <!-- Список элементов (появляется по нажатию на кнопку) -->\n        <!-- Здесь должны быть элементы списка -->\n      </ul>\n        <div>\n        <input type=\"range\" v-model.number=\"sliderValue\" min=\"1\" max=\"50000\" @input=\"updateTextbox\">\n        <input type=\"text\" v-model.number=\"searchText2\" @input=\"validateInput\">\n        </div>\n    </div>\n\n</template>\n \n<script>\nimport Map from './components/Map.vue'\n \nexport default {\n  name: 'App',\n  components: {\n    Map\n  },\ndata() {\n    return {\n      searchText: '', // Для хранения введенного текста\n      showList: false, // Флаг для отображения/скрытия списка\n      sliderValue: 50000,\n      searchText2: '50000'\n    };\n  },\n  methods: {\n    toggleList() {\n      this.showList = !this.showList; // Инвертируем флаг при нажатии на кнопку\n    },\n    validateInput() {\n      if (this.searchText2 === '' || isNaN(this.searchText2) || this.searchText2 <= 0) {\n        this.searchText2 = '1';\n      } else if (this.searchText2 > 50000) {\n        this.searchText2 = '50000';\n      }\n    },\n    updateTextbox() {\n      this.searchText2 = String(this.sliderValue);\n    }\n  }\n};\n</script>\n \n<style>\n@import url('../node_modules/ol/ol.css');\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n \nhtml, body, #map, #app {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\n.controls {\n  position: absolute; /* Позиционирование элементов управления */\n  top: 10px; /* Отступ от верха */\n  left: 10px; /* Отступ от левого края */\n  z-index: 1000; /* Отображение элементов поверх карты */\n}\n\n.controls input[type=\"text\"] {\n  width: 200px; /* Ширина текстового поля */\n  margin-right: 10px; /* Отступ справа */\n}\n\n.controls button {\n  padding: 5px 10px; /* Отступы внутри кнопки */\n}\n\n</style>"],"mappings":";;EAGOA,KAAK,EAAC;AAAU;;EAHvBC,GAAA;AAAA;;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAwCC,cAAA;IAAlCC,aAAa,EAAEC,KAAA,CAAAC;EAAW,4CAEhCC,mBAAA,CAUQ,OAVRC,UAUQ,GAVeC,mBAAA,wCAA2C,E,gBAC9DF,mBAAA,CAA4E;IAArEG,IAAI,EAAC,MAAM;IAJxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIkCP,KAAA,CAAAQ,UAAU,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAxBT,KAAA,CAAAQ,UAAU,E,GAAuCJ,mBAAA,oBAAuB,EACpGF,mBAAA,CAAqD;IAA5CQ,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,kBAAgB,GAAUP,mBAAA,YAAe,EAC3DJ,KAAA,CAAAc,QAAQ,I,cAAlBnB,mBAAA,CAEK,MARXoB,UAAA,GAM2BX,mBAAA,wDAA2D,EAC9EA,mBAAA,uCAA0C,C,KAPlDA,mBAAA,gBASQF,mBAAA,CAGM,c,gBAFNA,mBAAA,CAA4F;IAArFG,IAAI,EAAC,OAAO;IAV3B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAU4CP,KAAA,CAAAC,WAAW,GAAAM,MAAA;IAAES,GAAG,EAAC,GAAG;IAACC,GAAG,EAAC,OAAO;IAAEC,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAO,aAAA,IAAAP,QAAA,CAAAO,aAAA,IAAAR,IAAA,CAAa;iEAAtDX,KAAA,CAAAC,WAAW,E;IAVvDmB,MAAA,EAU4B;EAA4B,E,oBAChDlB,mBAAA,CAAuE;IAAhEG,IAAI,EAAC,MAAM;IAX1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAW2CP,KAAA,CAAAqB,WAAW,GAAAd,MAAA;IAAGW,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAU,aAAA,IAAAV,QAAA,CAAAU,aAAA,IAAAX,IAAA,CAAa;iEAAlCX,KAAA,CAAAqB,WAAW,E;IAXtDD,MAAA,EAW2B;EAA4B,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}