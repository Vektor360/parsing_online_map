{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"controls\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" Контейнер для карты \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Контейнер для элементов управления \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchText = $event),\n    placeholder: \"Введите текст...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchText]]), _createCommentVNode(\" Текстовое поле \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleList && $options.toggleList(...args))\n  }, \"Выбрать элементы\"), _createCommentVNode(\" Кнопка \"), $data.showList ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [_createCommentVNode(\" Список элементов (появляется по нажатию на кнопку) \"), _createCommentVNode(\" Здесь должны быть элементы списка \")])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["_createElementVNode","id","class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","type","_cache","$event","$data","searchText","placeholder","onClick","args","$options","toggleList","showList","_hoisted_3"],"sources":["C:\\Users\\aefa1\\Desktop\\VUE JS\\vue-layers\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"map\"></div> <!-- Контейнер для карты -->\n    <div class=\"controls\"> <!-- Контейнер для элементов управления -->\n      <input type=\"text\" v-model=\"searchText\" placeholder=\"Введите текст...\"> <!-- Текстовое поле -->\n      <button @click=\"toggleList\">Выбрать элементы</button> <!-- Кнопка -->\n      <ul v-if=\"showList\"> <!-- Список элементов (появляется по нажатию на кнопку) -->\n        <!-- Здесь должны быть элементы списка -->\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      searchText: '', // Для хранения введенного текста\n      showList: false // Флаг для отображения/скрытия списка\n    };\n  },\n  methods: {\n    toggleList() {\n      this.showList = !this.showList; // Инвертируем флаг при нажатии на кнопку\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Стили для контейнера с картой и элементами управления */\n#map {\n  height: 400px; /* Высота карты */\n}\n\n.controls {\n  position: absolute; /* Позиционирование элементов управления */\n  top: 10px; /* Отступ от верха */\n  left: 10px; /* Отступ от левого края */\n  z-index: 1000; /* Отображение элементов поверх карты */\n}\n\n.controls input[type=\"text\"] {\n  width: 200px; /* Ширина текстового поля */\n  margin-right: 10px; /* Отступ справа */\n}\n\n.controls button {\n  padding: 5px 10px; /* Отступы внутри кнопки */\n}\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAAoB;EAAfC,EAAE,EAAC;AAAK;;EACRC,KAAK,EAAC;AAAU;;EAHzBC,GAAA;AAAA;;uBACEC,mBAAA,CASM,cARJC,UAAoB,EAACC,mBAAA,yBAA4B,EACjDN,mBAAA,CAMM,OANNO,UAMM,GANiBD,mBAAA,wCAA2C,E,gBAChEN,mBAAA,CAAuE;IAAhEQ,IAAI,EAAC,MAAM;IAJxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIkCC,KAAA,CAAAC,UAAU,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAxBF,KAAA,CAAAC,UAAU,E,GAAkCN,mBAAA,oBAAuB,EAC/FN,mBAAA,CAAqD;IAA5Cc,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,kBAAgB,GAAUT,mBAAA,YAAe,EAC3DK,KAAA,CAAAO,QAAQ,I,cAAlBd,mBAAA,CAEK,MARXe,UAAA,GAM2Bb,mBAAA,wDAA2D,EAC9EA,mBAAA,uCAA0C,C,KAPlDA,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}