{"ast":null,"code":"import { Map, View } from 'ol';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport { OSM, Vector as VectorSource } from 'ol/source';\nimport Overlay from 'ol/Overlay';\nimport { Circle as Fill, Circle, Stroke, Style } from 'ol/style';\nimport { toLonLat } from 'ol/proj';\nimport Feature from 'ol/Feature';\nexport default {\n  name: 'CustomMap',\n  data() {\n    return {\n      map: null,\n      marker: null,\n      overlay: null,\n      coordinates: '',\n      circleFeature: null,\n      circleRadius: 0\n    };\n  },\n  mounted() {\n    this.map = new Map({\n      target: 'map',\n      layers: [new TileLayer({\n        source: new OSM()\n      })],\n      view: new View({\n        center: [0, 0],\n        zoom: 2\n      })\n    });\n\n    // Добавляем обработчик события клика на карту\n    this.map.on('click', this.handleMapClick);\n\n    // Создаем всплывающее окно для метки\n    this.overlay = new Overlay({\n      element: document.createElement('div'),\n      positioning: 'bottom-center',\n      stopEvent: false\n    });\n    this.map.addOverlay(this.overlay);\n  },\n  methods: {\n    handleMapClick(event) {\n      // Получаем координаты места клика\n      const coords = event.coordinate;\n\n      // Преобразуем координаты в долготу и широту с 4 знаками после запятой\n      const lonLat = toLonLat(coords).map(coord => coord.toFixed(4));\n      const lon = lonLat[0];\n      const lat = lonLat[1];\n\n      // Обновляем текстовое поле с координатами\n      this.coordinates = `Долгота: ${lon}, Широта: ${lat}`;\n\n      // Удаляем старую метку, если она была\n      if (this.marker) {\n        this.map.removeOverlay(this.marker);\n      }\n\n      // Создаем новую метку (круг)\n      const markerElement = document.createElement('div');\n      markerElement.className = 'marker';\n      markerElement.style.backgroundColor = 'black'; // Цвет метки\n      markerElement.style.width = '5px'; // Ширина метки\n      markerElement.style.height = '5px'; // Высота метки\n      markerElement.style.borderRadius = '50%'; // Круглая метка\n\n      this.marker = new Overlay({\n        element: markerElement,\n        position: coords,\n        positioning: 'center-center',\n        stopEvent: false\n      });\n      this.map.addOverlay(this.marker);\n\n      // Создаем круг вокруг метки\n      this.circleRadius = parseInt(this.searchText); // Преобразуем текст в число\n      if (this.circleRadius > 0) {\n        const circleStyle = new Style({\n          fill: new Fill({\n            color: 'rgba(255, 0, 0, 0.1)'\n          }),\n          // Задаем заливку круга\n          stroke: new Stroke({\n            color: 'red',\n            width: 1\n          }) // Задаем обводку круга\n        });\n        const circleFeature = new Feature(new ol.geom.Circle(coords, this.circleRadius)); // исправлено здесь\n        circleFeature.setStyle(circleStyle);\n        this.map.addLayer(new VectorLayer({\n          source: new VectorSource({\n            features: [circleFeature]\n          })\n        }));\n      }\n\n      // Позиционируем всплывающее окно с координатами над меткой\n      this.overlay.setPosition(coords);\n      const element = this.overlay.getElement();\n      element.innerHTML = this.coordinates;\n    }\n  }\n};","map":{"version":3,"names":["Map","View","Tile","TileLayer","Vector","VectorLayer","OSM","VectorSource","Overlay","Circle","Fill","Stroke","Style","toLonLat","Feature","name","data","map","marker","overlay","coordinates","circleFeature","circleRadius","mounted","target","layers","source","view","center","zoom","on","handleMapClick","element","document","createElement","positioning","stopEvent","addOverlay","methods","event","coords","coordinate","lonLat","coord","toFixed","lon","lat","removeOverlay","markerElement","className","style","backgroundColor","width","height","borderRadius","position","parseInt","searchText","circleStyle","fill","color","stroke","ol","geom","setStyle","addLayer","features","setPosition","getElement","innerHTML"],"sources":["C:\\Users\\aefa1\\Desktop\\VUE JS\\vue-layers\\src\\components\\Map.vue"],"sourcesContent":["<template>\r\n    <div id=\"map\"></div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Map, View } from 'ol';\r\n  import { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\r\n  import { OSM, Vector as VectorSource } from 'ol/source';\r\n  import Overlay from 'ol/Overlay';\r\n  import { Circle as Fill,Circle,Stroke, Style } from 'ol/style';\r\n  import { toLonLat } from 'ol/proj';\r\n  import Feature from 'ol/Feature';\r\n  \r\n  export default {\r\n    name: 'CustomMap',\r\n    data() {\r\n      return {\r\n        map: null,\r\n        marker: null,\r\n        overlay: null,\r\n        coordinates: '',\r\n        circleFeature: null,\r\n        circleRadius: 0,\r\n      };\r\n    },\r\n    mounted() {\r\n      this.map = new Map({\r\n        target: 'map',\r\n        layers: [\r\n          new TileLayer({\r\n            source: new OSM(),\r\n          }),\r\n        ],\r\n        view: new View({\r\n          center: [0, 0],\r\n          zoom: 2,\r\n        }),\r\n      });\r\n  \r\n      // Добавляем обработчик события клика на карту\r\n      this.map.on('click', this.handleMapClick);\r\n  \r\n      // Создаем всплывающее окно для метки\r\n      this.overlay = new Overlay({\r\n        element: document.createElement('div'),\r\n        positioning: 'bottom-center',\r\n        stopEvent: false,\r\n      });\r\n      this.map.addOverlay(this.overlay);\r\n    },\r\n    methods: {\r\n            handleMapClick(event) {\r\n        // Получаем координаты места клика\r\n        const coords = event.coordinate;\r\n\r\n        // Преобразуем координаты в долготу и широту с 4 знаками после запятой\r\n        const lonLat = toLonLat(coords).map(coord => coord.toFixed(4));\r\n        const lon = lonLat[0];\r\n        const lat = lonLat[1];\r\n\r\n        // Обновляем текстовое поле с координатами\r\n        this.coordinates = `Долгота: ${lon}, Широта: ${lat}`;\r\n\r\n        // Удаляем старую метку, если она была\r\n        if (this.marker) {\r\n          this.map.removeOverlay(this.marker);\r\n        }\r\n\r\n        // Создаем новую метку (круг)\r\n        const markerElement = document.createElement('div');\r\n        markerElement.className = 'marker';\r\n        markerElement.style.backgroundColor = 'black'; // Цвет метки\r\n        markerElement.style.width = '5px'; // Ширина метки\r\n        markerElement.style.height = '5px'; // Высота метки\r\n        markerElement.style.borderRadius = '50%'; // Круглая метка\r\n\r\n        this.marker = new Overlay({\r\n          element: markerElement,\r\n          position: coords,\r\n          positioning: 'center-center',\r\n          stopEvent: false,\r\n        });\r\n        this.map.addOverlay(this.marker);\r\n\r\n        // Создаем круг вокруг метки\r\n        this.circleRadius = parseInt(this.searchText); // Преобразуем текст в число\r\n        if (this.circleRadius > 0) {\r\n          const circleStyle = new Style({\r\n            fill: new Fill({ color: 'rgba(255, 0, 0, 0.1)' }), // Задаем заливку круга\r\n            stroke: new Stroke({ color: 'red', width: 1 }), // Задаем обводку круга\r\n          });\r\n          const circleFeature = new Feature(new ol.geom.Circle(coords, this.circleRadius)); // исправлено здесь\r\n          circleFeature.setStyle(circleStyle);\r\n          this.map.addLayer(new VectorLayer({\r\n            source: new VectorSource({\r\n              features: [circleFeature],\r\n            }),\r\n          }));\r\n        }\r\n\r\n        // Позиционируем всплывающее окно с координатами над меткой\r\n        this.overlay.setPosition(coords);\r\n        const element = this.overlay.getElement();\r\n        element.innerHTML = this.coordinates;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #map {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  \r\n  .marker {\r\n    position: relative;\r\n  }\r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}